import sys

from PyQt6.QtGui import QAction, QPixmap, QIcon
from PyQt6.QtWidgets import (QMainWindow, QWidget, QPushButton, QTextEdit, QComboBox, QListWidget, QMenu,
                             QApplication, QHBoxLayout, QDialogButtonBox, QLineEdit, QDialog, QVBoxLayout, QLabel)
from datetime import datetime
from db_work import Base, OutputBase


class CreateCatalog(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowIcon(QIcon("assets/note.png"))
        self.resize(400, 300)
        self.setWindowTitle("–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
        self.setFixedHeight(100)

        self.qBtn = QDialogButtonBox.StandardButton.Save | QDialogButtonBox.StandardButton.Cancel
        self.buttonBox = QDialogButtonBox(self.qBtn)
        self.buttonBox.accepted.connect(self.accept)
        self.buttonBox.rejected.connect(self.reject)

        self.layout = QVBoxLayout()
        self.text_input = QLineEdit()
        self.text = QLabel('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
        self.text_input.setFixedHeight(30)
        self.layout.addWidget(self.text)
        self.layout.addWidget(self.text_input)
        self.layout.addWidget(self.buttonBox)
        self.setLayout(self.layout)

    def get_input(self):
        return self.text_input.text().strip()


class DeleteCatalog(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowIcon(QIcon("assets/note.png"))
        self.resize(400, 300)
        self.setWindowTitle("–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
        self.setFixedHeight(100)

        self.qBtn = QDialogButtonBox.StandardButton.Save | QDialogButtonBox.StandardButton.Cancel
        self.buttonBox = QDialogButtonBox(self.qBtn)
        self.buttonBox.accepted.connect(self.accept)
        self.buttonBox.rejected.connect(self.reject)

        self.layout = QVBoxLayout()
        self.text = QLabel('–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–µ–π –∑–∞–º–µ—Ç–∫–∏?')
        self.layout.addWidget(self.text)
        self.layout.addWidget(self.buttonBox)
        self.setLayout(self.layout)


class Error(QDialog):
    def __init__(self, error):
        super().__init__()
        self.setWindowIcon(QIcon("assets/note.png"))
        self.resize(400, 150)
        self.setWindowTitle("–û—à–∏–±–∫–∞")

        self.layout = QVBoxLayout()

        self.error_layout = QHBoxLayout()

        # Add the error image
        self.error_image = QLabel()
        self.error_image.setPixmap(QPixmap("assets/error.png"))
        self.error_image.setFixedSize(64, 64)
        self.error_layout.addSpacing(10)
        self.error_layout.addWidget(self.error_image, 1)

        self.error_layout.addSpacing(20)

        self.message = QLabel(f"–û—à–∏–±–∫–∞: {error}")
        self.error_layout.addWidget(self.message, 2)

        self.layout.addLayout(self.error_layout)

        self.close_button = QPushButton("–ó–∞–∫—Ä—ã—Ç—å")
        self.close_button.clicked.connect(self.accept)
        self.close_button.setFixedHeight(30)
        self.layout.addWidget(self.close_button)

        self.setLayout(self.layout)


class InfoNote(QDialog):
    def __init__(self, notename):
        super().__init__()
        self.setWindowIcon(QIcon("assets/note.png"))
        self.setFixedSize(400, 300)
        self.setWindowTitle("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–º–µ—Ç–∫–µ")

        note_data = Base().info_notes(notename)
        self.layout = QVBoxLayout()
        self.text1 = QLabel(f'ID –ó–∞–º–µ—Ç–∫–∏: {note_data[0] if note_data[0] is not None else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}')
        self.text3 = QLabel(f'–ò–º—è –∑–∞–º–µ—Ç–∫–∏: {note_data[1] if note_data[1] is not None else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}')
        self.text4 = QLabel(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {note_data[2] if note_data[2] is not None else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}')
        self.text5 = QLabel(f'–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏: {note_data[3] if note_data[3] is not None else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}')
        self.text6 = QLabel(
            F"–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–µ–Ω—å –∑–∞–º–µ—Ç–∫–∏: {note_data[4] if note_data[4] is not None else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}")
        self.text7 = QLabel(
            F'–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏: {note_data[5] if note_data[5] is not None else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}')
        self.line = QLabel("<hr>")
        self.text8 = QLabel(F'ID –ö–∞—Ç–∞–ª–æ–≥–∞: {note_data[6] if note_data[6] is not None else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}')
        self.text9 = QLabel(F'–ò–º—è –∫–∞—Ç–∞–ª–æ–≥–∞: {note_data[7] if note_data[7] is not None else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}')
        self.text10 = QLabel(F'–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞: {note_data[8] if note_data[8] is not None else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}')

        self.layout.addWidget(self.text1)
        self.layout.addWidget(self.text3)
        self.layout.addWidget(self.text4)
        self.layout.addWidget(self.text5)
        self.layout.addWidget(self.text6)
        self.layout.addWidget(self.text7)
        self.layout.addWidget(self.line)
        self.layout.addWidget(self.text8)
        self.layout.addWidget(self.text9)
        self.layout.addWidget(self.text10)
        self.setLayout(self.layout)


class RenameNote(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowIcon(QIcon("assets/note.png"))
        self.resize(400, 300)
        self.setWindowTitle("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∑–∞–º–µ—Ç–∫–∏")
        self.setFixedHeight(100)

        self.qBtn = QDialogButtonBox.StandardButton.Save | QDialogButtonBox.StandardButton.Cancel
        self.buttonBox = QDialogButtonBox(self.qBtn)
        self.buttonBox.accepted.connect(self.accept)
        self.buttonBox.rejected.connect(self.reject)

        self.layout = QVBoxLayout()
        self.text_input = QLineEdit()
        self.text_input.setPlaceholderText("üìù –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∑–∞–º–µ—Ç–∫–∏")
        self.text_input.setFixedHeight(30)
        self.layout.addWidget(self.text_input)
        self.layout.addWidget(self.buttonBox)
        self.setLayout(self.layout)

    def get_input(self):
        return self.text_input.text().strip()


class SaveNote(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowIcon(QIcon("assets/note.png"))
        self.resize(400, 300)
        self.setWindowTitle('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É')
        self.setFixedHeight(100)

        self.qBtn = QDialogButtonBox.StandardButton.Ok | QDialogButtonBox.StandardButton.Cancel
        self.buttonBox = QDialogButtonBox(self.qBtn)
        self.buttonBox.accepted.connect(self.accept)
        self.buttonBox.rejected.connect(self.reject)
        self.layout = QVBoxLayout()
        self.message = QLabel("–ù–∞–ø–∏—à–∏—Ç–µ –¥–∞—Ç—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–∞—à–µ–π –∑–∞–º–µ—Ç–∫–∏, –µ—Å–ª–∏ –Ω–∞–¥–æ:")
        self.planned_date = QLineEdit()
        self.planned_date.setPlaceholderText("üìù –ü—Ä–∏–º–µ—Ä: 12.12.4242")
        self.layout.addWidget(self.message)
        self.layout.addWidget(self.planned_date)
        self.layout.addWidget(self.buttonBox)
        self.setLayout(self.layout)

    def get_input(self):
        return self.planned_date.text().strip()


class CreateNote(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowIcon(QIcon("assets/note.png"))
        self.resize(460, 300)
        self.setWindowTitle('–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏')
        self.setFixedHeight(160)

        self.qBtn = QDialogButtonBox.StandardButton.Save | QDialogButtonBox.StandardButton.Cancel
        self.buttonBox = QDialogButtonBox(self.qBtn)
        self.buttonBox.accepted.connect(self.accept)
        self.buttonBox.rejected.connect(self.reject)

        self.layout = QVBoxLayout()
        self.name_note = QLabel("–ò–º—è –∑–∞–º–µ—Ç–∫–∏:")
        self.input_name = QLineEdit()
        self.input_name.setPlaceholderText('üìù –ù–∞–ø—Ä–∏–º–µ—Ä: Work Note')
        self.name_catalog = QLabel("–ò–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        self.input_catalog = QLineEdit()
        self.input_catalog.setPlaceholderText("üìù –ï—Å–ª–∏ —Ç—É—Ç –ø—É—Å—Ç–æ, —Ç–æ –≤–∞—à–∞ –∑–∞–º–µ—Ç–∫–∞ –±—É–¥–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")

        self.layout.addWidget(self.name_note)
        self.layout.addWidget(self.input_name)
        self.layout.addWidget(self.name_catalog)
        self.layout.addWidget(self.input_catalog)
        self.layout.addWidget(self.buttonBox)
        self.setLayout(self.layout)

    def get_input(self):
        return self.input_name.text().strip(), self.input_catalog.text().strip()


class DeleteNote(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowIcon(QIcon("assets/note.png"))
        self.resize(400, 300)
        self.setWindowTitle('–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É')
        self.setFixedHeight(100)

        self.qBtn = QDialogButtonBox.StandardButton.Ok | QDialogButtonBox.StandardButton.Cancel
        self.buttonBox = QDialogButtonBox(self.qBtn)
        self.buttonBox.accepted.connect(self.accept)
        self.buttonBox.rejected.connect(self.reject)
        self.layout = QVBoxLayout()
        self.message = QLabel("–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É?")
        self.layout.addWidget(self.message)
        self.layout.addWidget(self.buttonBox)
        self.setLayout(self.layout)


class NotepadApp(QMainWindow):
    def __init__(self):
        super().__init__()
        '''–û–ë–™–ï–ö–¢–´ –í –ö–û–î–ï
                central_widget (QWidget) = {
                createCatalog - –°–æ–∑–¥–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é (QPushButton);
                deleteCatalog - –£–¥–∞–ª—è–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é (QPushButton);
                editNote - –ò–∑–º–µ–Ω—è–µ—Ç —Ç–µ–∫—Ç –≤ —Ñ–∞–π–ª–µ (QTextEdit);
                filterNotes - –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (QComboBox);
                foundNotes - –ù–∞—Ö–æ–¥–∏—Ç —Ñ–∞–π–ª –ø–æ –Ω–∞–±—Ä–∞–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É (QTextEdit);
                listNotes - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤—ã—à–µ (QListWidget);
                nameEdit - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ (QTextEdit)
                }

                menubar - (QMenuBar) = {
                menuMenu - (QMenu) = {actionOpen_Note - –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª (QAction);
                actionSave_Note - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–∞–π–ª (QAction);
                actionCreate_Note - –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —Ñ–∞–π–ª (QAction);
                actionDelete_Fire - –£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª (QAction);
                actionNote_info - –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ (QAction)}
                }'''
        self.setWindowTitle("–ë–ª–æ–∫–Ω–æ—Ç")
        self.setGeometry(100, 100, 800, 600)
        self.setWindowIcon(QIcon("assets/note.png"))
        self.later = ""

        # –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.createCatalog = QPushButton("–°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        self.createCatalog.setFixedHeight(30)
        self.deleteCatalog = QPushButton("–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        self.deleteCatalog.setFixedHeight(30)
        self.editNote = QTextEdit()
        self.editNote.setPlaceholderText("üìù –ó–¥–µ—Å—å —Ç–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏, –µ—Å–ª–∏ —Ç—É—Ç –ø—É—Å—Ç–æ, —Ç–æ –∑–∞–º–µ—Ç–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ø—É—Å—Ç–æ–π")
        self.filterNotes = QComboBox()
        self.filterNotes.setFixedHeight(30)
        self.foundNotes = QLineEdit()
        self.foundNotes.setFixedHeight(30)
        self.foundNotes.setPlaceholderText("üìù –í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–º–µ—Ç–∫–∏")
        self.listNotes = QListWidget()
        self.nameEdit = QLineEdit()
        self.nameEdit.setPlaceholderText("üìù –ó–¥–µ—Å—å –∏–º—è –∑–∞–º–µ—Ç–∫–∏")
        self.nameEdit.setFixedHeight(30)

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        wid = QWidget()
        self.setCentralWidget(wid)

        # –û—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç
        hl_1 = QHBoxLayout()
        hl_2 = QHBoxLayout()
        hl_3 = QHBoxLayout()
        main_v = QVBoxLayout()

        hl_1.addWidget(self.filterNotes, 2)
        hl_1.addWidget(self.createCatalog, 2)
        hl_1.addWidget(self.deleteCatalog, 2)

        hl_2.addWidget(self.foundNotes, 2)
        hl_2.addWidget(self.nameEdit, 4)

        hl_3.addWidget(self.listNotes, 2)
        hl_3.addWidget(self.editNote, 4)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞–∫–µ—Ç
        main_v.addLayout(hl_1)
        main_v.addLayout(hl_2)
        main_v.addLayout(hl_3)

        # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é
        self.menubar = self.menuBar()

        # –ú–µ–Ω—é "–§–∞–π–ª"
        self.menuMenu = QMenu("–†–∞–±–æ—Ç–∞ —Å –∑–∞–º–µ—Ç–∫–æ–π", self)
        self.menubar.addMenu(self.menuMenu)

        # –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –º–µ–Ω—é "–§–∞–π–ª"
        self.actionOpen_Note = QAction("–û—Ç–∫—Ä—ã—Ç—å –∑–∞–º–µ—Ç–∫—É", self)
        self.actionSave_Note = QAction("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É", self)
        self.actionCreate_Note = QAction("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É", self)
        self.actionDelete_Note = QAction("–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É", self)
        self.actionNote_info = QAction("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–º–µ—Ç–∫–µ", self)
        self.actionRename_Note = QAction("–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è –∑–∞–º–µ—Ç–∫–∏", self)
        self.actionBase_info = QAction("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ", self)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –≤ –º–µ–Ω—é "–§–∞–π–ª"
        self.menuMenu.addAction(self.actionNote_info)
        self.menuMenu.addAction(self.actionRename_Note)
        self.menuMenu.addAction(self.actionBase_info)
        self.menuMenu.addSeparator()
        self.menuMenu.addAction(self.actionOpen_Note)
        self.menuMenu.addAction(self.actionSave_Note)
        self.menuMenu.addAction(self.actionCreate_Note)
        self.menuMenu.addAction(self.actionDelete_Note)

        wid.setLayout(main_v)

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∏ —Ç.–¥.
        self.actionNote_info.triggered.connect(self.noteinfo)
        self.actionRename_Note.triggered.connect(self.rename_note)
        self.actionSave_Note.triggered.connect(self.save_note)
        self.actionOpen_Note.triggered.connect(self.open_note)
        self.actionCreate_Note.triggered.connect(self.create_note)
        self.actionDelete_Note.triggered.connect(self.delete_note)
        self.actionBase_info.triggered.connect(self.output_base)

        self.filterNotes.currentIndexChanged.connect(self.update_list_notes)
        self.listNotes.currentItemChanged.connect(self.update_edit_and_name_note)
        self.listNotes.itemDoubleClicked.connect(self.update_edit_and_name_note)
        self.foundNotes.textChanged.connect(self.filter_notes)
        self.createCatalog.clicked.connect(self.create_and_delete_catalog)
        self.deleteCatalog.clicked.connect(self.create_and_delete_catalog)

        self.update_catalogs()

    def noteinfo(self):
        """–ó–¥–µ—Å—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤—ã–≤–æ–¥ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø–æ–≤–æ–¥—É –∑–∞–º–µ—Ç–∫–∏. –í—Å—è —ç—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –æ–∫–Ω–µ.
        """
        if self.sender() == self.actionNote_info:
            try:
                print("–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–º–µ—Ç–∫–µ")
                notename = self.nameEdit.text()
                if notename is None:
                    raise Exception
                InfoNote(notename).exec()
            except Exception:
                Error(f'–ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–º–µ—Ç–∫–µ').exec()
        Base().close_base()
        print("–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–º–µ—Ç–∫–∏")

    def rename_note(self):
        """–ó–¥–µ—Å—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∑–∞–º–µ—Ç–∫–∏.
        –í—ã–≤–æ–¥–∏—Ç—Å—è –æ–∫–Ω–æ –≤ –∫–æ—Ç–æ—Ä–æ–º, –Ω–∞–¥–æ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–æ–≤–æ–µ –∏–º—è –∑–∞–º–µ—Ç–∫–∏ –∏ –Ω—É–∂–Ω–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–æ–¥–≤–µ—Ä–¥–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ.
        """
        if self.sender() == self.actionRename_Note:
            try:
                if self.nameEdit.text() == '':
                    raise Exception
                rename = RenameNote()
                if rename.exec():
                    last_name = self.nameEdit.text()
                    new_name = rename.get_input()
                    if last_name is not None:
                        Base().rename_note(last_name, new_name)
                        self.nameEdit.setText(new_name)
                    else:
                        raise Exception
            except Exception:
                Error('–ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –∑–∞–º–µ—Ç–∫–∏').exec()
            self.update_list_notes()
        Base().close_base()
        print("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∑–∞–º–µ—Ç–∫–∏")

    def save_note(self):
        """–ó–¥–µ—Å—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏. –í—ã–≤–æ–¥–∏—Ç—å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É
        —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–π –∑–∞–º–µ—Ç–∫–∏."""
        if self.nameEdit.text() != "" and self.sender() == self.actionSave_Note:
            notename = self.nameEdit.text()
            text = self.editNote.toPlainText()
            count_line = len(self.editNote.toPlainText().splitlines())
            id_catalog = self.filterNotes.currentData()
            savenote = SaveNote()
            if savenote.exec() == QDialog.DialogCode.Accepted:
                planned_date = savenote.get_input()
                is_valid_date = True
                if planned_date:
                    try:
                        datetime.strptime(planned_date, "%d.%m.%Y")
                    except Exception:
                        is_valid_date = False
                if is_valid_date:
                    Base().save_note(notename, text, planned_date, count_line, id_catalog)
                else:
                    Error('–ù–µ–≤–µ—Ä–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –¥–∞—Ç–∞').exec()
        Base().close_base()
        self.update_catalogs()
        print('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏')

    def open_note(self):
        """–ó–¥–µ—Å—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç–∏–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ –∏–º–µ–Ω–∏ –∑–∞–º–µ—Ç–∫–∏."""
        if self.sender() == self.actionOpen_Note:
            try:
                namenote = self.nameEdit.text().strip()
                note_text = Base().get_note_text(namenote)
                self.editNote.setPlainText(note_text)
            except Exception:
                Error('–ù–µ –≤–≤–µ–¥–µ–Ω–æ –∏–º—è –∑–∞–º–µ—Ç–∫–∏').exec()
        Base().close_base()

    def create_note(self):
        """–ó–¥–µ—Å—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∏–º–µ–Ω–∏ –∏ –∫–∞—Ç–∞–ª–æ–≥–∞. –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –¥–ª—è —ç—Ç–æ–≥–æ."""
        if self.sender() == self.actionCreate_Note:
            createnote = CreateNote()
            if createnote.exec() == QDialog.DialogCode.Accepted:
                notename, catalog = createnote.get_input()
                if notename == '' or notename is None:
                    Error("–ü—Ä–æ–∏–∑–æ—à—ë–ª —Å–±–æ–π –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏.").exec()
                    return
                base = Base().create_note(notename, catalog)
                if base is Exception:
                    Error("–ü—Ä–æ–∏–∑–æ—à—ë–ª —Å–±–æ–π –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏.").exec()
                    return
                print(f"–°–æ–∑–¥–∞–Ω–∞ –∑–∞–º–µ—Ç–∫–∞ '{notename}' –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{catalog}'.")
                self.nameEdit.setText(notename)
                self.editNote.setText('')
                self.update_catalogs()
        Base().close_base()

    def delete_note(self):
        """–ó–¥–µ—Å—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏. –í—ã–≤–æ–¥–∏—Ç—å—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è."""
        if self.sender() == self.actionDelete_Note:
            note_name = self.nameEdit.text()
            deletenote = DeleteNote()
            try:
                if deletenote.exec() == QDialog.DialogCode.Accepted:
                    Base().delete_note(note_name)
                    self.nameEdit.setText('')
                    self.editNote.setText('')
                    self.update_catalogs()
            except Exception:
                Error('–ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏').exec()
        Base().close_base()
        print('–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏')

    @staticmethod
    def output_base():
        """–ó–¥–µ—Å—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤—ã–≤–æ–¥ –¥–≤—É—Ö —Ç–∞–±–ª–∏—Ü –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
        OutputBase().exec()

    def update_catalogs(self):
        """–ó–¥–µ—Å—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –¥–æ–≤–∞–±–ª—è—è —Ñ—É–Ω–∫—Ü–∏—é "–≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏". """
        self.filterNotes.clear()
        self.filterNotes.addItem('–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
        catalogs = Base().load_catalogs()
        for catalog in catalogs:
            self.filterNotes.addItem(catalog[1], catalog[0])
        Base().close_base()

    def update_list_notes(self):
        """–ó–¥–µ—Å—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–º–µ—Ç–æ–∫."""
        self.listNotes.clear()
        catalog_id = self.filterNotes.currentData()
        if catalog_id != '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π':
            notes_names = Base().list_notes_by_catalog(catalog_id)
        else:
            notes_names = Base().list_notes_by_catalog(None)
        for name in notes_names:
            self.listNotes.addItem(name)
        Base().close_base()

    def update_edit_and_name_note(self, current_item):
        """–ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∑–∞–º–µ—Ç–∫—É –≤ —Å–ø–∏—Å–∫–µ —Ñ–∞–π–ª–æ–≤. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç: –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
        –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —ç—Ç–æ–π –∑–∞–º–µ—Ç–∫–∏, –∞ —Ç–∞–∫–∂–µ –∏–º—è –∑–∞–º–µ—Ç–∫–∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —ç—Ç–æ–π –∑–∞–º–µ—Ç–∫–∏."""
        try:
            note_name = current_item.text()
            self.nameEdit.setText(note_name)
            note_text = Base().get_note_text(note_name)
            self.editNote.setPlainText(note_text)
        except Exception:
            self.nameEdit.setText('')
            self.editNote.setPlainText('')
        Base().close_base()

    def filter_notes(self):
        """–ó–¥–µ—Å—å –∏–¥–µ—Ç –ø–æ–∏—Å–∫ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫ –ø–æ—Ö–æ–∂–∏—Ö –Ω–∞ —Ç–µ–∫—Å—Ç, –≤–≤–µ–¥–µ–Ω—ã–π –≤ –ø–æ–∏—Å–∫–µ –∑–∞–º–µ—Ç–æ–∫. –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫."""
        search_text = self.foundNotes.text().lower()
        self.listNotes.clear()
        all_notes = Base().get_all_notes()
        filtered_notes = [note for note in all_notes if search_text in note.lower()]
        for note in filtered_notes:
            self.listNotes.addItem(note)
        Base().close_base()

    def create_and_delete_catalog(self):
        """–ó–¥–µ—Å—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —É–¥–∞–ª–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –¥–ª—è —ç—Ç–æ–≥–æ."""
        if self.sender() == self.deleteCatalog:
            try:
                deletecatalog = DeleteCatalog()
                namenote = self.nameEdit.text()
                if deletecatalog.exec() == QDialog.DialogCode.Accepted:
                    namecatalog = self.filterNotes.currentText().strip()
                    if namecatalog is None or self.filterNotes.currentData() == 1:
                        raise Exception
                    n = Base().delete_catalog(namecatalog, namenote)
                    if n:
                        self.nameEdit.setText('')
                        self.editNote.setText('')
                    self.update_catalogs()
            except Exception:
                Error('–ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π').exec()
            print('–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
        elif self.sender() == self.createCatalog:
            try:
                createcatalog = CreateCatalog()
                if createcatalog.exec() == QDialog.DialogCode.Accepted:
                    namecatalog = createcatalog.get_input().strip()
                    if not namecatalog:
                        raise Exception
                    Base().create_catalog(namecatalog)
                    self.update_catalogs()
            except Exception:
                Error('–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π').exec()
            print('–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
        Base().close_base()


def except_hook(cls, exception, traceback):
    sys.__excepthook__(cls, exception, traceback)


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = NotepadApp()
    window.show()
    sys.excepthook = except_hook
    sys.exit(app.exec())
